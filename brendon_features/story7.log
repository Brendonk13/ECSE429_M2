root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - before creating False task with params: {'title': 'task1', 'doneStatus': False}
root - INFO - after post request, response: <Response [201]>
root - INFO - response_body: {'id': '51', 'title': 'task1', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}
root - INFO - False task created_id: 51
root - INFO - all False tasks: [{'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}, {'id': '51', 'title': 'task1', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - 
root - INFO - 
root - INFO - found the False task
root - INFO - doneStatus is False!
root - INFO - after scenario: <Scenario "(Normal flow) Query all incomplete tasks -- @1.1 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: ['51']
root - INFO -     loop index: 0, ID: 51
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - endpoint: todos, IDs I am about to delete: ['51']
root - INFO -     loop index: 0, ID: 51
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - before creating False task with params: {'title': 'task2', 'doneStatus': False}
root - INFO - after post request, response: <Response [201]>
root - INFO - response_body: {'id': '52', 'title': 'task2', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}
root - INFO - False task created_id: 52
root - INFO - all False tasks: [{'id': '52', 'title': 'task2', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}, {'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - 
root - INFO - 
root - INFO - found the False task
root - INFO - doneStatus is False!
root - INFO - after scenario: <Scenario "(Normal flow) Query all incomplete tasks -- @1.2 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: ['52']
root - INFO -     loop index: 0, ID: 52
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - endpoint: todos, IDs I am about to delete: ['52']
root - INFO -     loop index: 0, ID: 52
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - before creating False task with params: {'title': 'task3', 'doneStatus': False}
root - INFO - after post request, response: <Response [201]>
root - INFO - response_body: {'id': '53', 'title': 'task3', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}
root - INFO - False task created_id: 53
root - INFO - all False tasks: [{'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '53', 'title': 'task3', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - 
root - INFO - 
root - INFO - found the False task
root - INFO - doneStatus is False!
root - INFO - after scenario: <Scenario "(Normal flow) Query all incomplete tasks -- @1.3 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: ['53']
root - INFO -     loop index: 0, ID: 53
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - endpoint: todos, IDs I am about to delete: ['53']
root - INFO -     loop index: 0, ID: 53
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - before creating True task with params: {'title': 'task1', 'doneStatus': True}
root - INFO - after post request, response: <Response [201]>
root - INFO - response_body: {'id': '54', 'title': 'task1', 'doneStatus': 'true', 'description': '', 'tasksof': [{'id': '1'}]}
root - INFO - True task created_id: 54
root - INFO - all True tasks: [{'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '54', 'title': 'task1', 'doneStatus': 'true', 'description': '', 'tasksof': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - 
root - INFO - 
root - INFO - found the True task
root - INFO - doneStatus is True!
root - INFO - after scenario: <Scenario "(Alternate flow) Query all complete tasks -- @1.1 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: ['54']
root - INFO -     loop index: 0, ID: 54
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - endpoint: todos, IDs I am about to delete: ['54']
root - INFO -     loop index: 0, ID: 54
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - before creating True task with params: {'title': 'task2', 'doneStatus': True}
root - INFO - after post request, response: <Response [201]>
root - INFO - response_body: {'id': '55', 'title': 'task2', 'doneStatus': 'true', 'description': '', 'tasksof': [{'id': '1'}]}
root - INFO - True task created_id: 55
root - INFO - all True tasks: [{'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '55', 'title': 'task2', 'doneStatus': 'true', 'description': '', 'tasksof': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - 
root - INFO - 
root - INFO - found the True task
root - INFO - doneStatus is True!
root - INFO - after scenario: <Scenario "(Alternate flow) Query all complete tasks -- @1.2 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: ['55']
root - INFO -     loop index: 0, ID: 55
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - endpoint: todos, IDs I am about to delete: ['55']
root - INFO -     loop index: 0, ID: 55
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - before creating True task with params: {'title': 'task3', 'doneStatus': True}
root - INFO - after post request, response: <Response [201]>
root - INFO - response_body: {'id': '56', 'title': 'task3', 'doneStatus': 'true', 'description': '', 'tasksof': [{'id': '1'}]}
root - INFO - True task created_id: 56
root - INFO - all True tasks: [{'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '56', 'title': 'task3', 'doneStatus': 'true', 'description': '', 'tasksof': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - 
root - INFO - 
root - INFO - found the True task
root - INFO - doneStatus is True!
root - INFO - after scenario: <Scenario "(Alternate flow) Query all complete tasks -- @1.3 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: ['56']
root - INFO -     loop index: 0, ID: 56
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - endpoint: todos, IDs I am about to delete: ['56']
root - INFO -     loop index: 0, ID: 56
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - all True tasks: [{'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - after scenario: <Scenario "(Error flow) Query specific non-existant task -- @1.1 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - endpoint: todos, IDs I am about to delete: []
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - all False tasks: [{'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - after scenario: <Scenario "(Error flow) Query specific non-existant task -- @1.2 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - endpoint: todos, IDs I am about to delete: []
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - before checking project exists
root - INFO - after checking project exists, response: [{'id': '1', 'title': 'Office Work', 'completed': 'false', 'active': 'false', 'description': '', 'tasks': [{'id': '2'}, {'id': '1'}]}]
root - INFO - all True tasks: [{'id': '1', 'title': 'scan paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}], 'categories': [{'id': '1'}]}, {'id': '2', 'title': 'file paperwork', 'doneStatus': 'false', 'description': '', 'tasksof': [{'id': '1'}]}]
root - INFO - after scenario: <Scenario "(Error flow) Query specific non-existant task -- @1.3 Incomplete Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - endpoint: todos, IDs I am about to delete: []
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - response to post categories: {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks'}
root - INFO - response ID: 15,  new ID: 15
root - INFO - response to post categories: {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks'}
root - INFO - response ID: 16,  new ID: 16
root - INFO - response to post categories: {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}
root - INFO - response ID: 17,  new ID: 17
root - INFO - setup feature story for log_file: story9.log completed
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - OLD PRIORITY: HIGH, category ID: 15
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - response to post categories/15/todos: {'id': '57', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '57'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks'}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 57,  new ID: 57
root - INFO - response ID: 57,  new ID: 57
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - DELETE: http://localhost:4567/categories/15/todos/57
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/57
root - INFO - <Response [200]>
root - INFO - 
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - url to create_task: http://localhost:4567/categories/16/todos
root - INFO - response to post categories/16/todos: {'id': '58', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks'}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 58,  new ID: 58
root - INFO - response ID: 58,  new ID: 58
root - INFO - just tried to post the NEW TODO with NEW PRIORITY
root - INFO - 
root - INFO - Then: url we get from for verification: http://localhost:4567/categories/16/todos
root - INFO - the response body: {'id': '58', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - the stored response: {'id': '58', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - after scenario: <Scenario "(Normal flow) Update a valid task with a new priority -- @1.1 Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - tried to print obj with id: 58
root - INFO - endpoint: todos, IDs I am about to delete: [58]
root - INFO - tried to print obj with id: 58
root - INFO -     loop index: 0, ID: 58
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - OLD PRIORITY: MEDIUM, category ID: 16
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - response to post categories/16/todos: {'id': '59', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks'}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '59'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 59,  new ID: 59
root - INFO - response ID: 59,  new ID: 59
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - DELETE: http://localhost:4567/categories/16/todos/59
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/59
root - INFO - <Response [200]>
root - INFO - 
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - url to create_task: http://localhost:4567/categories/15/todos
root - INFO - response to post categories/15/todos: {'id': '60', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '60'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 60,  new ID: 60
root - INFO - response ID: 60,  new ID: 60
root - INFO - just tried to post the NEW TODO with NEW PRIORITY
root - INFO - 
root - INFO - Then: url we get from for verification: http://localhost:4567/categories/15/todos
root - INFO - the response body: {'id': '60', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - the stored response: {'id': '60', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - after scenario: <Scenario "(Normal flow) Update a valid task with a new priority -- @1.2 Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - tried to print obj with id: 60
root - INFO - endpoint: todos, IDs I am about to delete: [60]
root - INFO - tried to print obj with id: 60
root - INFO -     loop index: 0, ID: 60
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - OLD PRIORITY: LOW, category ID: 17
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - response to post categories/17/todos: {'id': '61', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '60'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '61'}]}]
root - INFO - old ID: 61,  new ID: 61
root - INFO - response ID: 61,  new ID: 61
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - DELETE: http://localhost:4567/categories/17/todos/61
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/61
root - INFO - <Response [200]>
root - INFO - 
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - url to create_task: http://localhost:4567/categories/15/todos
root - INFO - response to post categories/15/todos: {'id': '62', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 62,  new ID: 62
root - INFO - response ID: 62,  new ID: 62
root - INFO - just tried to post the NEW TODO with NEW PRIORITY
root - INFO - 
root - INFO - Then: url we get from for verification: http://localhost:4567/categories/15/todos
root - INFO - the response body: {'id': '62', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - the stored response: {'id': '62', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - after scenario: <Scenario "(Normal flow) Update a valid task with a new priority -- @1.3 Tasks">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - tried to print obj with id: 62
root - INFO - endpoint: todos, IDs I am about to delete: [62]
root - INFO - tried to print obj with id: 62
root - INFO -     loop index: 0, ID: 62
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - OLD PRIORITY: HIGH, category ID: 15
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - response to post categories/15/todos: {'id': '63', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '63'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 63,  new ID: 63
root - INFO - response ID: 63,  new ID: 63
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - DELETE: http://localhost:4567/categories/15/todos/63
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/63
root - INFO - <Response [200]>
root - INFO - 
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - url to create_task: http://localhost:4567/categories/15/todos
root - INFO - response to post categories/15/todos: {'id': '64', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 64,  new ID: 64
root - INFO - response ID: 64,  new ID: 64
root - INFO - just tried to post the NEW TODO with NEW PRIORITY
root - INFO - 
root - INFO - Then: url we get from for verification: http://localhost:4567/categories/15/todos
root - INFO - the response body: {'id': '64', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - the stored response: {'id': '64', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - after scenario: <Scenario "(Alternate flow) Update a valid task with the same priority -- @1.1 ">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - tried to print obj with id: 64
root - INFO - endpoint: todos, IDs I am about to delete: [64]
root - INFO - tried to print obj with id: 64
root - INFO -     loop index: 0, ID: 64
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - OLD PRIORITY: MEDIUM, category ID: 16
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - response to post categories/16/todos: {'id': '65', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '65'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 65,  new ID: 65
root - INFO - response ID: 65,  new ID: 65
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - DELETE: http://localhost:4567/categories/16/todos/65
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/65
root - INFO - <Response [200]>
root - INFO - 
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - url to create_task: http://localhost:4567/categories/16/todos
root - INFO - response to post categories/16/todos: {'id': '66', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks'}]
root - INFO - old ID: 66,  new ID: 66
root - INFO - response ID: 66,  new ID: 66
root - INFO - just tried to post the NEW TODO with NEW PRIORITY
root - INFO - 
root - INFO - Then: url we get from for verification: http://localhost:4567/categories/16/todos
root - INFO - the response body: {'id': '66', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - the stored response: {'id': '66', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - after scenario: <Scenario "(Alternate flow) Update a valid task with the same priority -- @1.2 ">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - tried to print obj with id: 66
root - INFO - endpoint: todos, IDs I am about to delete: [66]
root - INFO - tried to print obj with id: 66
root - INFO -     loop index: 0, ID: 66
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - OLD PRIORITY: LOW, category ID: 17
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - response to post categories/17/todos: {'id': '67', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '67'}]}]
root - INFO - old ID: 67,  new ID: 67
root - INFO - response ID: 67,  new ID: 67
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - DELETE: http://localhost:4567/categories/17/todos/67
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/67
root - INFO - <Response [200]>
root - INFO - 
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - url to create_task: http://localhost:4567/categories/17/todos
root - INFO - response to post categories/17/todos: {'id': '68', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '68'}]}]
root - INFO - old ID: 68,  new ID: 68
root - INFO - response ID: 68,  new ID: 68
root - INFO - just tried to post the NEW TODO with NEW PRIORITY
root - INFO - 
root - INFO - Then: url we get from for verification: http://localhost:4567/categories/17/todos
root - INFO - the response body: {'id': '68', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - the stored response: {'id': '68', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - after scenario: <Scenario "(Alternate flow) Update a valid task with the same priority -- @1.3 ">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - tried to print obj with id: 68
root - INFO - endpoint: todos, IDs I am about to delete: [68]
root - INFO - tried to print obj with id: 68
root - INFO -     loop index: 0, ID: 68
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - OLD PRIORITY: HIGH, category ID: 15
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - response to post categories/15/todos: {'id': '69', 'title': 'task1', 'doneStatus': 'false', 'description': 'HIGH Priority Tasks'}
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '69'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '68'}]}]
root - INFO - old ID: 69,  new ID: 69
root - INFO - response ID: 69,  new ID: 69
root - INFO - before assert all in error flow showing that newPriority: nope_1 d.n exist
root - INFO - response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '69'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '68'}]}]
root - INFO - after assert all
root - INFO - fxn: categories_with_priorities: using categories: [CategoryWith obj: Priority: Priority: , created_id: 2, CategoryWith obj: Priority: Priority: , created_id: 1, CategoryWith obj: Priority: Priority: HIGH Priority Tasks, created_id: 15, CategoryWith obj: Priority: Priority: MEDIUM Priority Tasks, created_id: 16, CategoryWith obj: Priority: Priority: LOW Priority Tasks, created_id: 17]
root - INFO - searching for priority: nope_1
root - INFO - category: CategoryWith obj: Priority: Priority: , created_id: 2
root - INFO - category: CategoryWith obj: Priority: Priority: , created_id: 1
root - INFO - category: CategoryWith obj: Priority: Priority: HIGH Priority Tasks, created_id: 15
root - INFO - category: CategoryWith obj: Priority: Priority: MEDIUM Priority Tasks, created_id: 16
root - INFO - category: CategoryWith obj: Priority: Priority: LOW Priority Tasks, created_id: 17
root - INFO - searching for priority: HIGH
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 15
root - INFO - found priority attached to  object: 15
root - INFO - DELETE: http://localhost:4567/categories/15/todos/69
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/69
root - INFO - <Response [200]>
root - INFO - 
root - INFO - after scenario: <Scenario "(Error flow) Update a valid task with non-existant priority -- @1.1 ">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - endpoint: todos, IDs I am about to delete: []
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - OLD PRIORITY: MEDIUM, category ID: 16
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - response to post categories/16/todos: {'id': '70', 'title': 'task2', 'doneStatus': 'false', 'description': 'MEDIUM Priority Tasks'}
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '70'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '68'}]}]
root - INFO - old ID: 70,  new ID: 70
root - INFO - response ID: 70,  new ID: 70
root - INFO - before assert all in error flow showing that newPriority: nope_2 d.n exist
root - INFO - response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '70'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '68'}]}]
root - INFO - after assert all
root - INFO - fxn: categories_with_priorities: using categories: [CategoryWith obj: Priority: Priority: , created_id: 2, CategoryWith obj: Priority: Priority: , created_id: 1, CategoryWith obj: Priority: Priority: HIGH Priority Tasks, created_id: 15, CategoryWith obj: Priority: Priority: MEDIUM Priority Tasks, created_id: 16, CategoryWith obj: Priority: Priority: LOW Priority Tasks, created_id: 17]
root - INFO - searching for priority: nope_2
root - INFO - category: CategoryWith obj: Priority: Priority: , created_id: 2
root - INFO - category: CategoryWith obj: Priority: Priority: , created_id: 1
root - INFO - category: CategoryWith obj: Priority: Priority: HIGH Priority Tasks, created_id: 15
root - INFO - category: CategoryWith obj: Priority: Priority: MEDIUM Priority Tasks, created_id: 16
root - INFO - category: CategoryWith obj: Priority: Priority: LOW Priority Tasks, created_id: 17
root - INFO - searching for priority: MEDIUM
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 16
root - INFO - found priority attached to  object: 16
root - INFO - DELETE: http://localhost:4567/categories/16/todos/70
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/70
root - INFO - <Response [200]>
root - INFO - 
root - INFO - after scenario: <Scenario "(Error flow) Update a valid task with non-existant priority -- @1.2 ">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - endpoint: todos, IDs I am about to delete: []
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - OLD PRIORITY: LOW, category ID: 17
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - response to post categories/17/todos: {'id': '71', 'title': 'task3', 'doneStatus': 'false', 'description': 'LOW Priority Tasks'}
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - todo_id_from_response, response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '68'}, {'id': '71'}]}]
root - INFO - old ID: 71,  new ID: 71
root - INFO - response ID: 71,  new ID: 71
root - INFO - before assert all in error flow showing that newPriority: nope_3 d.n exist
root - INFO - response: [{'id': '2', 'title': 'Home', 'description': ''}, {'id': '1', 'title': 'Office', 'description': ''}, {'id': '15', 'title': 'Priority: HIGH', 'description': 'HIGH Priority Tasks', 'todos': [{'id': '62'}, {'id': '60'}, {'id': '64'}]}, {'id': '16', 'title': 'Priority: MEDIUM', 'description': 'MEDIUM Priority Tasks', 'todos': [{'id': '58'}, {'id': '66'}]}, {'id': '17', 'title': 'Priority: LOW', 'description': 'LOW Priority Tasks', 'todos': [{'id': '68'}, {'id': '71'}]}]
root - INFO - after assert all
root - INFO - fxn: categories_with_priorities: using categories: [CategoryWith obj: Priority: Priority: , created_id: 2, CategoryWith obj: Priority: Priority: , created_id: 1, CategoryWith obj: Priority: Priority: HIGH Priority Tasks, created_id: 15, CategoryWith obj: Priority: Priority: MEDIUM Priority Tasks, created_id: 16, CategoryWith obj: Priority: Priority: LOW Priority Tasks, created_id: 17]
root - INFO - searching for priority: nope_3
root - INFO - category: CategoryWith obj: Priority: Priority: , created_id: 2
root - INFO - category: CategoryWith obj: Priority: Priority: , created_id: 1
root - INFO - category: CategoryWith obj: Priority: Priority: HIGH Priority Tasks, created_id: 15
root - INFO - category: CategoryWith obj: Priority: Priority: MEDIUM Priority Tasks, created_id: 16
root - INFO - category: CategoryWith obj: Priority: Priority: LOW Priority Tasks, created_id: 17
root - INFO - searching for priority: LOW
root - INFO - tried to print obj with id: 15
root - INFO - category: 15
root - INFO - tried to print obj with id: 16
root - INFO - category: 16
root - INFO - tried to print obj with id: 17
root - INFO - category: 17
root - INFO - tried to print obj with id: 17
root - INFO - found priority attached to  object: 17
root - INFO - DELETE: http://localhost:4567/categories/17/todos/71
root - INFO - <Response [200]>
root - INFO - DELETE: http://localhost:4567/todos/71
root - INFO - <Response [200]>
root - INFO - 
root - INFO - after scenario: <Scenario "(Error flow) Update a valid task with non-existant priority -- @1.3 ">
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - endpoint: todos, IDs I am about to delete: []
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': [15, 16, 17]})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
root - INFO - endpoint: projects/1/tasks, IDs I am about to delete: []
root - INFO - endpoint: todos, IDs I am about to delete: []
root - INFO - tried to print obj with id: 15
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO - endpoint: categories, IDs I am about to delete: [15, 16, 17]
root - INFO - tried to print obj with id: 15
root - INFO -     loop index: 0, ID: 15
root - INFO -        response to delete: <Response [200]>
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 17
root - INFO -        list after delete: [16, 17]
root - INFO - tried to print obj with id: 17
root - INFO -     loop index: 1, ID: 17
root - INFO -        response to delete: <Response [200]>
root - INFO - tried to print obj with id: 16
root - INFO -        list after delete: [16]
root - INFO - tried to print obj with id: 16
root - INFO - tried to print obj with id: 16
root - INFO - finished iterating over: [16], leftover IDs (should be all gone): [16]
root - INFO - 
root - INFO - tried to print obj with id: 16
root - INFO -     loop index: 0, ID: 16
root - INFO -        response to delete: <Response [200]>
root - INFO -        list after delete: []
root - INFO - finished iterating over: [], leftover IDs (should be all gone): []
root - INFO - 
root - INFO - created_ids after a delete post scenario: defaultdict(<class 'list'>, {'projects/1/tasks': [], 'todos': [], 'categories': []})
root - INFO - ====================== done scenario ===========================
root - INFO - 
root - INFO - 
root - INFO - 
